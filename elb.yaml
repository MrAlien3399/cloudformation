AWSTemplateFormatVersion: 2010-09-09
Description: Elastic Load Balancing

Parameters:
  KeyName:
    Description: SSH KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Existing SSH KeyPair
  
Resources:
  Web01:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      AvailabilityZone: ap-southeast-1a
      ImageId: ami-00b8d9cb8a7161e41
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name 
          Value: Web01
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install httpd -y
          systemctl start httpd
          systemctl enable httpd
          echo This is Web01 Website > /var/www/html/index.html
          systemctl restart httpd

  Web02:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      AvailabilityZone: ap-southeast-1b
      ImageId: ami-00b8d9cb8a7161e41
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name 
          Value: Web02
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install httpd -y
          systemctl start httpd
          systemctl enable httpd
          echo This is Web02 Website > /var/www/html/index.html
          systemctl restart httpd

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: PublicWebDMZ
      GroupDescription: PublicWebDMZ
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  myELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer 
    Properties:
      AvailabilityZones:
        - ap-southeast-1a
        - ap-southeast-1b
        - ap-southeast-1c
      Instances:
        - Ref: Web01
          Ref: Web02
      Listeners:
        - LoadBalancerPort: 80
          InstancePort: 80
          Protocol: HTTP 
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: 3
        UnhealthyThreshold: 5
        Interval: 30
        Timeout: 5

  myELBIngressGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB ingress group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupOwnerId: !GetAtt myELB.SourceSecurityGroup.OwnerAlias
          SourceSecurityGroupName: !GetAtt myELB.SourceSecurityGroup.GroupName

Outputs:
  Web01ID:
    Description: Web02 ID 
    Value: !Ref Web01
  
  Web02ID:
    Description: Web02 ID
    Value: !Ref Web02
      
  
  ELB:
    Description: The ElasticLoadBalancer 
    Value: !Ref myELB
